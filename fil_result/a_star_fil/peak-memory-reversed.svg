<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1072" onload="init(evt)" viewBox="0 0 1200 1072" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="1072" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (2.5 MiB), Reversed</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="1059.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="2635621">
        <g>
            <title>&lt;frozen posixpath&gt;:417 (abspath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="144" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="157.50">&lt;..</text>
        </g>
        <g>
            <title> (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="166" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="179.50">..</text>
        </g>
        <g>
            <title>&lt;frozen posixpath&gt;:428 (realpath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="188" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="201.50">&lt;..</text>
        </g>
        <g>
            <title>    return os.path.realpath(filepath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="210" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="223.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:548 (_realpath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="232" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="245.50">/..</text>
        </g>
        <g>
            <title>        filepath = _realpath(filepath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="254" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="267.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1134 (_make_controller_from_path) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="276" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="289.50">/..</text>
        </g>
        <g>
            <title>            self._make_controller_from_path(filepath) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="298" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="311.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1040 (_find_libraries_with_dyld) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="320" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="333.50">/..</text>
        </g>
        <g>
            <title>            self._find_libraries_with_dyld() (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="342" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="355.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:970 (_load_libraries) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="364" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="377.50">/..</text>
        </g>
        <g>
            <title>        self._load_libraries() (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="386" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="399.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:818 (__init__) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="408" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="421.50">/..</text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="430" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="443.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="452" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="465.50">/..</text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="474" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="487.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="496" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="509.50">/..</text>
        </g>
        <g>
            <title>            return next(self.gen) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="518" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="531.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (69,204 bytes, 2.63%)</title>
            <rect x="1.0762%" y="540" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="28364" fg:w="69204"/>
            <text x="1.3262%" y="553.50">/..</text>
        </g>
        <g>
            <title> (95,564 bytes, 3.63%)</title>
            <rect x="0.1118%" y="122" width="3.6259%" height="21" fill="rgb(255,221,221)" fg:x="2946" fg:w="95564"/>
            <text x="0.3618%" y="135.50"></text>
        </g>
        <g>
            <title>def _parse(source, state, verbose, nested, first=False): (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="122" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_parser.py:512 (_parse_sub) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="144" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="157.50"></text>
        </g>
        <g>
            <title>    p = _parse_sub(source, state, flags &amp; SRE_FLAG_VERBOSE, 0) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="166" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_parser.py:979 (parse) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="188" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="201.50"></text>
        </g>
        <g>
            <title>        p = _parser.parse(p, flags) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="210" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_compiler.py:745 (compile) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="232" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="245.50"></text>
        </g>
        <g>
            <title>        p = _compiler.compile(pattern, flags) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="254" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/__init__.py:307 (_compile) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="276" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="289.50"></text>
        </g>
        <g>
            <title>    return _compile(pattern, flags).sub(repl, string, count) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="298" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/__init__.py:186 (sub) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="320" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="333.50"></text>
        </g>
        <g>
            <title>        text = re.sub(r&apos;(?m)^&apos; + margin, &apos;&apos;, text) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="342" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/textwrap.py:466 (dedent) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="364" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="377.50"></text>
        </g>
        <g>
            <title>        msg = textwrap.dedent( (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="386" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1202 (_warn_if_incompatible_openmp) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="408" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="421.50"></text>
        </g>
        <g>
            <title>        self._warn_if_incompatible_openmp() (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="430" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:819 (__init__) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="452" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="465.50"></text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="474" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="496" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="509.50"></text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="518" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="540" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="553.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="562" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (6,870 bytes, 0.26%)</title>
            <rect x="4.2810%" y="584" width="0.2607%" height="21" fill="rgb(255,242,242)" fg:x="112832" fg:w="6870"/>
            <text x="4.5310%" y="597.50"></text>
        </g>
        <g>
            <title>    @final (5,660 bytes, 0.21%)</title>
            <rect x="5.1642%" y="122" width="0.2148%" height="21" fill="rgb(255,243,243)" fg:x="136110" fg:w="5660"/>
            <text x="5.4142%" y="135.50"></text>
        </g>
        <g>
            <title>        return MultiIndex( (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="298" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2263 (take) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="320" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="333.50"></text>
        </g>
        <g>
            <title>        new_labels = self.axes[axis].take(indexer) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="342" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:893 (take) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="364" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="377.50"></text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="386" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="408" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="421.50"></text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="430" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="452" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="465.50"></text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="474" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="496" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="509.50"></text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="518" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="540" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="553.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="562" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="584" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="597.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="606" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="628" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="641.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="650" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="672" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="685.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="694" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="716" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="729.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="738" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="760" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="773.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="782" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="804" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="817.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="826" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="848" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="861.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="870" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="892" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="905.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="914" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="927.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="936" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="949.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="958" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="971.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (8,722 bytes, 0.33%)</title>
            <rect x="5.4433%" y="980" width="0.3309%" height="21" fill="rgb(255,241,241)" fg:x="143464" fg:w="8722"/>
            <text x="5.6933%" y="993.50"></text>
        </g>
        <g>
            <title>        return type(self)( (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="298" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2227 (_getitem_slice) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="320" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="333.50"></text>
        </g>
        <g>
            <title>        new_mgr = self._mgr.get_slice(slobj, axis=axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="342" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4369 (_slice) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="364" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="377.50"></text>
        </g>
        <g>
            <title>        return self.obj._slice(slice_obj, axis=axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="386" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1765 (_get_slice_axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="408" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="421.50"></text>
        </g>
        <g>
            <title>            return self._get_slice_axis(key, axis=axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="430" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1729 (_getitem_axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="452" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="465.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="474" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="496" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="509.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="518" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="540" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="553.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="562" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="584" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="597.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="606" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="628" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="650" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="672" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="685.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="694" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="716" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="729.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="738" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="760" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="773.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="782" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="804" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="817.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="826" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="848" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="861.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="870" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (15,974 bytes, 0.61%)</title>
            <rect x="5.7742%" y="892" width="0.6061%" height="21" fill="rgb(255,238,238)" fg:x="152186" fg:w="15974"/>
            <text x="6.0242%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:2210 (_drop_level_numbers) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="320" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="333.50"></text>
        </g>
        <g>
            <title>                new_index = new_index._drop_level_numbers([i]) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="342" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3173 (maybe_mi_droplevels) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="364" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="377.50"></text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="386" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="408" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="421.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="430" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="452" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="465.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="474" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="496" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="509.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="518" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="540" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="553.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="562" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="584" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="597.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="606" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="628" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="641.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="650" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="672" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="685.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="694" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (9,751 bytes, 0.37%)</title>
            <rect x="6.3803%" y="716" width="0.3700%" height="21" fill="rgb(255,240,240)" fg:x="168160" fg:w="9751"/>
            <text x="6.6303%" y="729.50"></text>
        </g>
        <g>
            <title>    array_like.flags.writeable = False (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="122" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4139 (_coerce_indexer_frozen) (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="144" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="157.50"></text>
        </g>
        <g>
            <title>                _coerce_indexer_frozen(level_codes, lev, copy=copy).view() (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="166" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1103 (&lt;genexpr&gt;) (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="188" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="201.50"></text>
        </g>
        <g>
            <title>            new_codes = FrozenList( (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="210" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1102 (_set_codes) (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="232" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="245.50"></text>
        </g>
        <g>
            <title>        result._set_codes(codes, copy=copy, validate=False) (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="254" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:351 (__new__) (57,624 bytes, 2.19%)</title>
            <rect x="5.4433%" y="276" width="2.1864%" height="21" fill="rgb(255,227,227)" fg:x="143464" fg:w="57624"/>
            <text x="5.6933%" y="289.50"></text>
        </g>
        <g>
            <title>            return MultiIndex( (32,928 bytes, 1.25%)</title>
            <rect x="6.3803%" y="298" width="1.2493%" height="21" fill="rgb(255,233,233)" fg:x="168160" fg:w="32928"/>
            <text x="6.6303%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2209 (__getitem__) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="320" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="333.50"></text>
        </g>
        <g>
            <title>            new_index = self[indexer] (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="342" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3170 (maybe_mi_droplevels) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="364" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="377.50"></text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="386" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="408" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="421.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="430" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="452" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="465.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="474" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="496" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="509.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="518" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="540" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="553.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="562" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="584" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="597.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="606" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="628" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="641.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="650" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="672" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="685.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="694" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (23,177 bytes, 0.88%)</title>
            <rect x="6.7502%" y="716" width="0.8794%" height="21" fill="rgb(255,235,235)" fg:x="177911" fg:w="23177"/>
            <text x="7.0002%" y="729.50"></text>
        </g>
        <g>
            <title>    return (speed_mph * 1609.344) / 60**2 (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="122" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="135.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:243 (mph_to_mps) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="144" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="157.50">/User..</text>
        </g>
        <g>
            <title>    return road_length_m / mph_to_mps(road_speed_mph) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="166" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="179.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:255 (time_between) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="188" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="201.50">/User..</text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="210" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="223.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="232" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="245.50">/User..</text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="254" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="267.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="276" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="289.50">/User..</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="298" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="311.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="320" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="333.50">/User..</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="342" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="355.50">prof..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (154,632 bytes, 5.87%)</title>
            <rect x="8.6646%" y="364" width="5.8670%" height="21" fill="rgb(255,213,213)" fg:x="228366" fg:w="154632"/>
            <text x="8.9146%" y="377.50">/User..</text>
        </g>
        <g>
            <title>    road_speed_mph = edge_between_nodes[&quot;maxspeed&quot;][0].item() (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="122" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:252 (time_between) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="144" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="157.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="166" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="188" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="201.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="210" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="232" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="245.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="254" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="276" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="289.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="298" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (5,514 bytes, 0.21%)</title>
            <rect x="14.7560%" y="320" width="0.2092%" height="21" fill="rgb(255,243,243)" fg:x="388912" fg:w="5514"/>
            <text x="15.0060%" y="333.50"></text>
        </g>
        <g>
            <title>        class _FuncPtr(_CFuncPtr): (5,326 bytes, 0.20%)</title>
            <rect x="15.0761%" y="122" width="0.2021%" height="21" fill="rgb(255,243,243)" fg:x="397348" fg:w="5326"/>
            <text x="15.3261%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/ctypes/__init__.py:373 (__init__) (5,326 bytes, 0.20%)</title>
            <rect x="15.0761%" y="144" width="0.2021%" height="21" fill="rgb(255,243,243)" fg:x="397348" fg:w="5326"/>
            <text x="15.3261%" y="157.50"></text>
        </g>
        <g>
            <title>        filepath = _realpath(filepath) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="122" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1134 (_make_controller_from_path) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="144" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="157.50"></text>
        </g>
        <g>
            <title>            self._make_controller_from_path(filepath) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="166" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1040 (_find_libraries_with_dyld) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="188" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="201.50"></text>
        </g>
        <g>
            <title>            self._find_libraries_with_dyld() (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="210" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:970 (_load_libraries) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="232" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="245.50"></text>
        </g>
        <g>
            <title>        self._load_libraries() (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="254" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:818 (__init__) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="276" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="289.50"></text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="298" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="320" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="333.50"></text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="342" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="364" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="377.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="386" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (45,808 bytes, 1.74%)</title>
            <rect x="15.3674%" y="408" width="1.7380%" height="21" fill="rgb(255,230,230)" fg:x="405026" fg:w="45808"/>
            <text x="15.6174%" y="421.50"></text>
        </g>
        <g>
            <title>        if libalgos.is_lexsorted(int64_codes[:k]): (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="122" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4041 (_lexsort_depth) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="144" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="157.50"></text>
        </g>
        <g>
            <title>        return _lexsort_depth(self.codes, self.nlevels) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="166" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2014 (_lexsort_depth) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="188" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="201.50"></text>
        </g>
        <g>
            <title>            if level &gt; 0 or self._lexsort_depth == 0: (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="210" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3393 (_get_level_indexer) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="232" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="245.50"></text>
        </g>
        <g>
            <title>            indexer = self._get_level_indexer(key, level=level) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="254" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3290 (_get_loc_level) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="276" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="289.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="298" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="320" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="333.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="342" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="364" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="377.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="386" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="408" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="421.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="430" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="452" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="465.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="474" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="496" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="509.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="518" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="540" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="553.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="562" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (15,500 bytes, 0.59%)</title>
            <rect x="17.1580%" y="584" width="0.5881%" height="21" fill="rgb(255,238,238)" fg:x="452220" fg:w="15500"/>
            <text x="17.4080%" y="597.50"></text>
        </g>
        <g>
            <title>        nb = type(block)( (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="122" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:1021 (iget) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="144" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="157.50"></text>
        </g>
        <g>
            <title>            col_mgr = self._mgr.iget(i) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="166" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4010 (_ixs) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="188" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="201.50"></text>
        </g>
        <g>
            <title>            res = self._ixs(loc, axis=1) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="210" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4639 (_get_item_cache) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="232" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="245.50"></text>
        </g>
        <g>
            <title>                return self._get_item_cache(key) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="254" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4078 (__getitem__) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="276" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="289.50"></text>
        </g>
        <g>
            <title>        result = super().__getitem__(key) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="298" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/geopandas/geodataframe.py:1750 (__getitem__) (8,000 bytes, 0.30%)</title>
            <rect x="18.0236%" y="320" width="0.3035%" height="21" fill="rgb(255,241,241)" fg:x="475034" fg:w="8000"/>
            <text x="18.2736%" y="333.50"></text>
        </g>
        <g>
            <title>        new_mgr = self._mgr.get_slice(slobj, axis=axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="122" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="135.50">        new_..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4369 (_slice) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="144" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="157.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>        return self.obj._slice(slice_obj, axis=axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="166" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="179.50">        retu..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1765 (_get_slice_axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="188" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="201.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            return self._get_slice_axis(key, axis=axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="210" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="223.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1729 (_getitem_axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="232" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="245.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="254" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="267.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="276" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="289.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="298" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="311.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="320" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="333.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="342" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="355.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="364" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="377.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="386" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="399.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="408" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="421.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="430" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="443.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="452" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="465.50">/Users/hal/mi..</text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="474" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="487.50">    edge_bet..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="496" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="509.50">/Users/hal/Li..</text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="518" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="531.50">        time..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="540" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="553.50">/Users/hal/Li..</text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="562" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="575.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="584" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="597.50">/Users/hal/Li..</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="606" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="619.50">            ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="628" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="641.50">/Users/hal/Li..</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="650" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="663.50">profile(lamb..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (323,040 bytes, 12.26%)</title>
            <rect x="18.3718%" y="672" width="12.2567%" height="21" fill="rgb(255,197,197)" fg:x="484210" fg:w="323040"/>
            <text x="18.6218%" y="685.50">/Users/hal/Li..</text>
        </g>
        <g>
            <title>        level_index = self.levels[level] (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="298" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3316 (_get_level_indexer) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="320" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="333.50"></text>
        </g>
        <g>
            <title>            indexer = self._get_level_indexer(key, level=level) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="342" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3290 (_get_loc_level) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="364" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="377.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="386" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="408" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="421.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="430" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="452" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="465.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="474" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="496" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="509.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="518" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="540" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="553.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="562" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="584" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="597.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="606" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="628" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="641.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="650" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (10,160 bytes, 0.39%)</title>
            <rect x="30.6606%" y="672" width="0.3855%" height="21" fill="rgb(255,240,240)" fg:x="808098" fg:w="10160"/>
            <text x="30.9106%" y="685.50"></text>
        </g>
        <g>
            <title>        result = self._view() (49,360 bytes, 1.87%)</title>
            <rect x="30.6606%" y="210" width="1.8728%" height="21" fill="rgb(255,229,229)" fg:x="808098" fg:w="49360"/>
            <text x="30.9106%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:787 (_rename) (49,360 bytes, 1.87%)</title>
            <rect x="30.6606%" y="232" width="1.8728%" height="21" fill="rgb(255,229,229)" fg:x="808098" fg:w="49360"/>
            <text x="30.9106%" y="245.50"></text>
        </g>
        <g>
            <title>        result = [x._rename(name=name) for x, name in zip(self._levels, self._names)] (49,360 bytes, 1.87%)</title>
            <rect x="30.6606%" y="254" width="1.8728%" height="21" fill="rgb(255,229,229)" fg:x="808098" fg:w="49360"/>
            <text x="30.9106%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:897 (levels) (49,360 bytes, 1.87%)</title>
            <rect x="30.6606%" y="276" width="1.8728%" height="21" fill="rgb(255,229,229)" fg:x="808098" fg:w="49360"/>
            <text x="30.9106%" y="289.50"></text>
        </g>
        <g>
            <title>        new_levels = list(self.levels) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="298" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:2175 (_drop_level_numbers) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="320" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="333.50"></text>
        </g>
        <g>
            <title>                new_index = new_index._drop_level_numbers([i]) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="342" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3173 (maybe_mi_droplevels) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="364" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="377.50"></text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="386" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="408" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="421.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="430" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="452" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="465.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="474" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="496" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="509.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="518" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="540" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="553.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="562" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="584" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="597.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="606" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="628" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="641.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="650" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="672" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="685.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="694" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (39,200 bytes, 1.49%)</title>
            <rect x="31.0461%" y="716" width="1.4873%" height="21" fill="rgb(255,231,231)" fg:x="818258" fg:w="39200"/>
            <text x="31.2961%" y="729.50"></text>
        </g>
        <g>
            <title>        return MultiIndex( (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="342" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2263 (take) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="364" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="377.50"></text>
        </g>
        <g>
            <title>        new_labels = self.axes[axis].take(indexer) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="386" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:893 (take) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="408" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="421.50"></text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="430" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="452" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="465.50"></text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="474" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="496" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="509.50"></text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="518" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="540" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="553.50"></text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="562" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="584" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="597.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="606" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="628" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="641.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="650" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="672" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="685.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="694" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="716" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="729.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="738" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="760" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="773.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="782" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="804" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="817.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="826" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="848" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="861.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="870" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="892" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="905.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="914" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="927.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="936" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="949.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="958" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="971.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="980" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="993.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="1002" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="1015.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (8,960 bytes, 0.34%)</title>
            <rect x="32.5334%" y="1024" width="0.3400%" height="21" fill="rgb(255,241,241)" fg:x="857458" fg:w="8960"/>
            <text x="32.7834%" y="1037.50"></text>
        </g>
        <g>
            <title>        return type(self)( (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="342" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2227 (_getitem_slice) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="364" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="377.50"></text>
        </g>
        <g>
            <title>        new_mgr = self._mgr.get_slice(slobj, axis=axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="386" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4369 (_slice) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="408" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="421.50"></text>
        </g>
        <g>
            <title>        return self.obj._slice(slice_obj, axis=axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="430" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1765 (_get_slice_axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="452" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="465.50"></text>
        </g>
        <g>
            <title>            return self._get_slice_axis(key, axis=axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="474" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1729 (_getitem_axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="496" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="509.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="518" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="540" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="553.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="562" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="584" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="597.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="606" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="628" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="641.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="650" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="672" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="685.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="694" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="716" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="729.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="738" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="760" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="773.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="782" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="804" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="817.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="826" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="848" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="861.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="870" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="892" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="905.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="914" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="927.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (25,568 bytes, 0.97%)</title>
            <rect x="32.8734%" y="936" width="0.9701%" height="21" fill="rgb(255,235,235)" fg:x="866418" fg:w="25568"/>
            <text x="33.1234%" y="949.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:2210 (_drop_level_numbers) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="364" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="377.50"></text>
        </g>
        <g>
            <title>                new_index = new_index._drop_level_numbers([i]) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="386" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3173 (maybe_mi_droplevels) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="408" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="421.50"></text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="430" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="452" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="465.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="474" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="496" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="509.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="518" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="540" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="553.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="562" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="584" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="597.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="606" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="628" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="641.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="650" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="672" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="685.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="694" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="716" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="729.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="738" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (9,920 bytes, 0.38%)</title>
            <rect x="33.8435%" y="760" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="891986" fg:w="9920"/>
            <text x="34.0935%" y="773.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (124,688 bytes, 4.73%)</title>
            <rect x="30.6606%" y="122" width="4.7309%" height="21" fill="rgb(255,217,217)" fg:x="808098" fg:w="124688"/>
            <text x="30.9106%" y="135.50">   ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (124,688 bytes, 4.73%)</title>
            <rect x="30.6606%" y="144" width="4.7309%" height="21" fill="rgb(255,217,217)" fg:x="808098" fg:w="124688"/>
            <text x="30.9106%" y="157.50">/Use..</text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (124,688 bytes, 4.73%)</title>
            <rect x="30.6606%" y="166" width="4.7309%" height="21" fill="rgb(255,217,217)" fg:x="808098" fg:w="124688"/>
            <text x="30.9106%" y="179.50">   ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (124,688 bytes, 4.73%)</title>
            <rect x="30.6606%" y="188" width="4.7309%" height="21" fill="rgb(255,217,217)" fg:x="808098" fg:w="124688"/>
            <text x="30.9106%" y="201.50">/Use..</text>
        </g>
        <g>
            <title>                ensure_index(lev, copy=copy)._view() for lev in levels (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="210" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="223.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:925 (&lt;genexpr&gt;) (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="232" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="245.50">/..</text>
        </g>
        <g>
            <title>            new_levels = FrozenList( (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="254" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="267.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:924 (_set_levels) (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="276" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="289.50">/..</text>
        </g>
        <g>
            <title>        result._set_levels(levels, copy=copy, validate=False) (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="298" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="311.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:350 (__new__) (75,328 bytes, 2.86%)</title>
            <rect x="32.5334%" y="320" width="2.8581%" height="21" fill="rgb(255,224,224)" fg:x="857458" fg:w="75328"/>
            <text x="32.7834%" y="333.50">/..</text>
        </g>
        <g>
            <title>            return MultiIndex( (40,800 bytes, 1.55%)</title>
            <rect x="33.8435%" y="342" width="1.5480%" height="21" fill="rgb(255,231,231)" fg:x="891986" fg:w="40800"/>
            <text x="34.0935%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2209 (__getitem__) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="364" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="377.50"></text>
        </g>
        <g>
            <title>            new_index = self[indexer] (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="386" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3170 (maybe_mi_droplevels) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="408" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="421.50"></text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="430" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="452" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="465.50"></text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="474" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="496" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="509.50"></text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="518" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="540" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="553.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="562" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="584" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="597.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="606" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="628" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="641.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="650" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="672" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="685.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="694" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="716" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="729.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="738" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (30,880 bytes, 1.17%)</title>
            <rect x="34.2199%" y="760" width="1.1716%" height="21" fill="rgb(255,233,233)" fg:x="901906" fg:w="30880"/>
            <text x="34.4699%" y="773.50"></text>
        </g>
        <g>
            <title>        return get_func() (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="122" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:495 (get_num_threads) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="144" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="157.50"></text>
        </g>
        <g>
            <title>        return self.get_num_threads() (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="166" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:138 (num_threads) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="188" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="201.50"></text>
        </g>
        <g>
            <title>            &quot;num_threads&quot;: self.num_threads, (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="210" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:125 (info) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="232" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="245.50"></text>
        </g>
        <g>
            <title>        return [lib_controller.info() for lib_controller in self.lib_controllers] (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="254" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:829 (info) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="276" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="289.50"></text>
        </g>
        <g>
            <title>        self._original_info = self._controller.info() (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="298" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:586 (__init__) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="320" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="333.50"></text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="342" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="364" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="377.50"></text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="386" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="408" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="421.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="430" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (39,217 bytes, 1.49%)</title>
            <rect x="35.5358%" y="452" width="1.4880%" height="21" fill="rgb(255,231,231)" fg:x="936588" fg:w="39217"/>
            <text x="35.7858%" y="465.50"></text>
        </g>
        <g>
            <title>        n = self.shape[axis] (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="166" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:890 (take) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="188" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="201.50"></text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="210" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="232" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="245.50"></text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="254" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="276" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="289.50"></text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="298" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="320" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="333.50"></text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="342" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="364" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="377.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="386" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="408" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="421.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="430" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="452" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="465.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="474" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="496" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="509.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="518" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="540" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="562" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="584" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="597.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="606" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="628" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="641.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="650" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="672" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="685.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="694" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="716" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="729.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="738" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="760" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="773.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="782" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (14,026 bytes, 0.53%)</title>
            <rect x="37.0560%" y="804" width="0.5322%" height="21" fill="rgb(255,239,239)" fg:x="976657" fg:w="14026"/>
            <text x="37.3060%" y="817.50"></text>
        </g>
        <g>
            <title>        block = self.blocks[self.blknos[i]] (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="210" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:1016 (iget) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="232" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="245.50"></text>
        </g>
        <g>
            <title>            col_mgr = self._mgr.iget(i) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="254" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4010 (_ixs) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="276" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="289.50"></text>
        </g>
        <g>
            <title>            res = self._ixs(loc, axis=1) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="298" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4639 (_get_item_cache) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="320" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="333.50"></text>
        </g>
        <g>
            <title>                return self._get_item_cache(key) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="342" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/frame.py:4078 (__getitem__) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="364" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="377.50"></text>
        </g>
        <g>
            <title>        result = super().__getitem__(key) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="386" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/geopandas/geodataframe.py:1750 (__getitem__) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="408" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="421.50"></text>
        </g>
        <g>
            <title>    road_speed_mph = edge_between_nodes[&quot;maxspeed&quot;][0].item() (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="430" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:252 (time_between) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="452" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="465.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="474" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="496" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="509.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="518" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="540" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="553.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="562" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="584" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="597.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="606" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (5,880 bytes, 0.22%)</title>
            <rect x="37.5882%" y="628" width="0.2231%" height="21" fill="rgb(255,242,242)" fg:x="990683" fg:w="5880"/>
            <text x="37.8382%" y="641.50"></text>
        </g>
        <g>
            <title>        return tuple(len(ax) for ax in self.axes) (33,682 bytes, 1.28%)</title>
            <rect x="37.0560%" y="122" width="1.2780%" height="21" fill="rgb(255,233,233)" fg:x="976657" fg:w="33682"/>
            <text x="37.3060%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/base.py:84 (shape) (33,682 bytes, 1.28%)</title>
            <rect x="37.0560%" y="144" width="1.2780%" height="21" fill="rgb(255,233,233)" fg:x="976657" fg:w="33682"/>
            <text x="37.3060%" y="157.50"></text>
        </g>
        <g>
            <title>            self._rebuild_blknos_and_blklocs() (19,656 bytes, 0.75%)</title>
            <rect x="37.5882%" y="166" width="0.7458%" height="21" fill="rgb(255,237,237)" fg:x="990683" fg:w="19656"/>
            <text x="37.8382%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:192 (blknos) (19,656 bytes, 0.75%)</title>
            <rect x="37.5882%" y="188" width="0.7458%" height="21" fill="rgb(255,237,237)" fg:x="990683" fg:w="19656"/>
            <text x="37.8382%" y="201.50"></text>
        </g>
        <g>
            <title>            new_mgr._blknos = self.blknos.copy() (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="210" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:704 (reindex_indexer) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="232" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="245.50"></text>
        </g>
        <g>
            <title>        return self.reindex_indexer( (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="254" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:894 (take) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="276" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="289.50"></text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="298" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="320" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="333.50"></text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="342" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="364" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="377.50"></text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="386" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="408" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="421.50"></text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="430" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="452" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="465.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="474" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="496" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="509.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="518" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="540" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="553.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="562" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="584" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="597.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="606" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="628" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="650" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="672" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="685.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="694" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="716" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="729.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="738" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="760" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="773.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="782" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="804" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="817.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="826" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="848" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="861.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="870" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (13,776 bytes, 0.52%)</title>
            <rect x="37.8113%" y="892" width="0.5227%" height="21" fill="rgb(255,239,239)" fg:x="996563" fg:w="13776"/>
            <text x="38.0613%" y="905.50"></text>
        </g>
        <g>
            <title>        return type(self)(new_values, self._mgr_locs, ndim=self.ndim, refs=self.refs) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="122" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/blocks.py:2529 (slice_block_rows) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="144" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="157.50"></text>
        </g>
        <g>
            <title>        new_mgr = self._mgr.get_slice(slobj, axis=axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="166" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4369 (_slice) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="188" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="201.50"></text>
        </g>
        <g>
            <title>        return self.obj._slice(slice_obj, axis=axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="210" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1765 (_get_slice_axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="232" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="245.50"></text>
        </g>
        <g>
            <title>            return self._get_slice_axis(key, axis=axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="254" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1729 (_getitem_axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="276" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="289.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="298" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="320" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="333.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="342" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="364" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="377.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="386" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="408" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="421.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="430" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="452" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="465.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="474" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="496" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="509.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="518" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="540" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="553.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="562" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="584" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="597.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="606" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="628" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="641.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="650" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="672" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="685.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="694" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (40,896 bytes, 1.55%)</title>
            <rect x="38.3340%" y="716" width="1.5517%" height="21" fill="rgb(255,231,231)" fg:x="1010339" fg:w="40896"/>
            <text x="38.5840%" y="729.50"></text>
        </g>
        <g>
            <title>        self.closed.append(next_node) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="122" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:127 (search_step) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="144" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="157.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="166" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="188" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="201.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="210" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (53,024 bytes, 2.01%)</title>
            <rect x="39.9481%" y="232" width="2.0118%" height="21" fill="rgb(255,228,228)" fg:x="1052881" fg:w="53024"/>
            <text x="40.1981%" y="245.50"></text>
        </g>
        <g>
            <title>            [Node(node_id, (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="122" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="135.50">            [Node(node_id,..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:122 (search_step) (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="144" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="157.50">/Users/hal/Library/CloudStorag..</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="166" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="179.50">            self.search_step(..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="188" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="201.50">/Users/hal/Library/CloudStorag..</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="210" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="223.50">profile(lambda: searcher.run_..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (670,488 bytes, 25.44%)</title>
            <rect x="42.1977%" y="232" width="25.4395%" height="21" fill="rgb(255,174,174)" fg:x="1112171" fg:w="670488"/>
            <text x="42.4477%" y="245.50">/Users/hal/Library/CloudStorag..</text>
        </g>
        <g>
            <title>            filepath = filepath.decode(&quot;utf-8&quot;) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="122" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="135.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1037 (_find_libraries_with_dyld) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="144" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="157.50">/..</text>
        </g>
        <g>
            <title>            self._find_libraries_with_dyld() (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="166" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="179.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:970 (_load_libraries) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="188" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="201.50">/..</text>
        </g>
        <g>
            <title>        self._load_libraries() (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="210" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="223.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:818 (__init__) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="232" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="245.50">/..</text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="254" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="267.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="276" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="289.50">/..</text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="298" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="311.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="320" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="333.50">/..</text>
        </g>
        <g>
            <title>            return next(self.gen) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="342" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="355.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (69,204 bytes, 2.63%)</title>
            <rect x="67.6595%" y="364" width="2.6257%" height="21" fill="rgb(255,225,225)" fg:x="1783249" fg:w="69204"/>
            <text x="67.9095%" y="377.50">/..</text>
        </g>
        <g>
            <title>            key = tuple(com.apply_if_callable(x, self.obj) for x in key) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="122" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1181 (__getitem__) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="144" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="157.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="166" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="188" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="201.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="210" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="232" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="245.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="254" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="276" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="289.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="298" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="320" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="333.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="342" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="364" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="377.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="386" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (39,494 bytes, 1.50%)</title>
            <rect x="70.3833%" y="408" width="1.4985%" height="21" fill="rgb(255,231,231)" fg:x="1855037" fg:w="39494"/>
            <text x="70.6333%" y="421.50"></text>
        </g>
        <g>
            <title>            key = tuple(list(x) if is_iterator(x) else x for x in key) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="122" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1180 (__getitem__) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="144" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="157.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="166" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="188" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="201.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="210" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="232" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="245.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="254" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="276" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="289.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="298" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="320" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="333.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="342" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="364" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="377.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="386" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (39,532 bytes, 1.50%)</title>
            <rect x="71.8818%" y="408" width="1.4999%" height="21" fill="rgb(255,231,231)" fg:x="1894531" fg:w="39532"/>
            <text x="72.1318%" y="421.50"></text>
        </g>
        <g>
            <title>            return self._engine.get_loc(casted_key) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="122" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="135.50">            return sel..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:3805 (get_loc) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="144" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="157.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>            return level_index.get_loc(key) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="166" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="179.50">            return lev..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2980 (_get_loc_single_level_index) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="188" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="201.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>            idx = self._get_loc_single_level_index(level_index, key) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="210" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="223.50">            idx = self..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3391 (_get_level_indexer) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="232" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="245.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>            indexer = self._get_level_indexer(key, level=level) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="254" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="267.50">            indexer = ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3290 (_get_loc_level) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="276" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="289.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="298" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="311.50">        loc, mi = self..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="320" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="333.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="342" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="355.50">            loc, new_a..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="364" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="377.50">/Users/hal/miniforge3/l..</text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="386" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="399.50">    edge_between_nodes..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="408" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="421.50">/Users/hal/Library/Clou..</text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="430" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="443.50">        time = np.sum(..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="452" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="465.50">/Users/hal/Library/Clou..</text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="474" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="487.50">                    co..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="496" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="509.50">/Users/hal/Library/Clou..</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="518" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="531.50">            self.searc..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="540" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="553.50">/Users/hal/Library/Clou..</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="562" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="575.50">profile(lambda: search..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (528,704 bytes, 20.06%)</title>
            <rect x="73.4935%" y="584" width="20.0599%" height="21" fill="rgb(255,182,182)" fg:x="1937009" fg:w="528704"/>
            <text x="73.7435%" y="597.50">/Users/hal/Library/Clou..</text>
        </g>
        <g>
            <title>                arr.flags.writeable = False (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="122" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="135.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/shapely/decorators.py:76 (wrapped) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="144" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="157.50"></text>
        </g>
        <g>
            <title>            result[~shapely.is_valid_input(result)] = None (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="166" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="179.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/geopandas/array.py:1213 (take) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="188" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="201.50"></text>
        </g>
        <g>
            <title>        return arr.take(indexer, fill_value=fill_value, allow_fill=allow_fill) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="210" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="223.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/array_algos/take.py:114 (take_nd) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="232" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="245.50"></text>
        </g>
        <g>
            <title>        new_values = algos.take_nd( (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="254" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="267.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/blocks.py:1307 (take_nd) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="276" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="289.50"></text>
        </g>
        <g>
            <title>                blk.take_nd( (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="298" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="311.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:688 (reindex_indexer) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="320" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="333.50"></text>
        </g>
        <g>
            <title>        return self.reindex_indexer( (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="342" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="355.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:894 (take) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="364" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="377.50"></text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="386" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="399.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="408" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="421.50"></text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="430" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="443.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="452" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="465.50"></text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="474" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="487.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="496" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="509.50"></text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="518" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="531.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="540" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="553.50"></text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="562" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="575.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="584" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="597.50"></text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="606" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="619.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="628" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="641.50"></text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="650" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="663.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="672" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="685.50"></text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="694" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="707.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="716" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="729.50"></text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="738" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="751.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="760" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="773.50"></text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="782" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="795.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="804" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="817.50"></text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="826" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="839.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="848" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="861.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="870" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="883.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="892" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="905.50"></text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="914" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="927.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="936" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="949.50"></text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="958" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="971.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (5,586 bytes, 0.21%)</title>
            <rect x="93.5965%" y="980" width="0.2119%" height="21" fill="rgb(255,243,243)" fg:x="2466849" fg:w="5586"/>
            <text x="93.8465%" y="993.50"></text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="122" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="135.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="144" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="157.50">/User..</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="166" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="179.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="188" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="201.50">/User..</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="210" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="223.50">prof..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (154,744 bytes, 5.87%)</title>
            <rect x="94.1165%" y="232" width="5.8713%" height="21" fill="rgb(255,213,213)" fg:x="2480555" fg:w="154744"/>
            <text x="94.3665%" y="245.50">/User..</text>
        </g>
        <g>
            <title>all (2,635,621 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="2635621"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>