<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1072" onload="init(evt)" viewBox="0 0 1200 1072" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="1072" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (3.1 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="1059.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="3235190">
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:121 (search_step) (8,832 bytes, 0.27%)</title>
            <rect x="0.0339%" y="210" width="0.2730%" height="21" fill="rgb(255,242,242)" fg:x="1096" fg:w="8832"/>
            <text x="0.2839%" y="223.50"></text>
        </g>
        <g>
            <title>        self.open.extend( (8,832 bytes, 0.27%)</title>
            <rect x="0.0339%" y="232" width="0.2730%" height="21" fill="rgb(255,242,242)" fg:x="1096" fg:w="8832"/>
            <text x="0.2839%" y="245.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:122 (search_step) (1,302,392 bytes, 40.26%)</title>
            <rect x="0.3069%" y="210" width="40.2570%" height="21" fill="rgb(255,154,154)" fg:x="9928" fg:w="1302392"/>
            <text x="0.5569%" y="223.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/Docu..</text>
        </g>
        <g>
            <title>            [Node(node_id, (1,302,392 bytes, 40.26%)</title>
            <rect x="0.3069%" y="232" width="40.2570%" height="21" fill="rgb(255,154,154)" fg:x="9928" fg:w="1302392"/>
            <text x="0.5569%" y="245.50">            [Node(node_id,..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3316 (_get_level_indexer) (11,690 bytes, 0.36%)</title>
            <rect x="49.9853%" y="474" width="0.3613%" height="21" fill="rgb(255,241,241)" fg:x="1617118" fg:w="11690"/>
            <text x="50.2353%" y="487.50"></text>
        </g>
        <g>
            <title>        level_index = self.levels[level] (11,690 bytes, 0.36%)</title>
            <rect x="49.9853%" y="496" width="0.3613%" height="21" fill="rgb(255,241,241)" fg:x="1617118" fg:w="11690"/>
            <text x="50.2353%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:897 (levels) (11,690 bytes, 0.36%)</title>
            <rect x="49.9853%" y="518" width="0.3613%" height="21" fill="rgb(255,241,241)" fg:x="1617118" fg:w="11690"/>
            <text x="50.2353%" y="531.50"></text>
        </g>
        <g>
            <title>        result = [x._rename(name=name) for x, name in zip(self._levels, self._names)] (11,690 bytes, 0.36%)</title>
            <rect x="49.9853%" y="540" width="0.3613%" height="21" fill="rgb(255,241,241)" fg:x="1617118" fg:w="11690"/>
            <text x="50.2353%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:787 (_rename) (11,462 bytes, 0.35%)</title>
            <rect x="49.9923%" y="562" width="0.3543%" height="21" fill="rgb(255,241,241)" fg:x="1617346" fg:w="11462"/>
            <text x="50.2423%" y="575.50"></text>
        </g>
        <g>
            <title>        result = self._view() (11,462 bytes, 0.35%)</title>
            <rect x="49.9923%" y="584" width="0.3543%" height="21" fill="rgb(255,241,241)" fg:x="1617346" fg:w="11462"/>
            <text x="50.2423%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (11,072 bytes, 0.34%)</title>
            <rect x="50.0044%" y="606" width="0.3422%" height="21" fill="rgb(255,241,241)" fg:x="1617736" fg:w="11072"/>
            <text x="50.2544%" y="619.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (11,072 bytes, 0.34%)</title>
            <rect x="50.0044%" y="628" width="0.3422%" height="21" fill="rgb(255,241,241)" fg:x="1617736" fg:w="11072"/>
            <text x="50.2544%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (10,160 bytes, 0.31%)</title>
            <rect x="50.0325%" y="650" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="1618648" fg:w="10160"/>
            <text x="50.2825%" y="663.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (10,160 bytes, 0.31%)</title>
            <rect x="50.0325%" y="672" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="1618648" fg:w="10160"/>
            <text x="50.2825%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:3805 (get_loc) (531,536 bytes, 16.43%)</title>
            <rect x="50.3743%" y="562" width="16.4298%" height="21" fill="rgb(255,189,189)" fg:x="1629704" fg:w="531536"/>
            <text x="50.6243%" y="575.50">/Users/hal/minifor..</text>
        </g>
        <g>
            <title>            return self._engine.get_loc(casted_key) (531,536 bytes, 16.43%)</title>
            <rect x="50.3743%" y="584" width="16.4298%" height="21" fill="rgb(255,189,189)" fg:x="1629704" fg:w="531536"/>
            <text x="50.6243%" y="597.50">            retur..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2980 (_get_loc_single_level_index) (532,892 bytes, 16.47%)</title>
            <rect x="50.3743%" y="518" width="16.4717%" height="21" fill="rgb(255,189,189)" fg:x="1629704" fg:w="532892"/>
            <text x="50.6243%" y="531.50">/Users/hal/minifor..</text>
        </g>
        <g>
            <title>            return level_index.get_loc(key) (532,892 bytes, 16.47%)</title>
            <rect x="50.3743%" y="540" width="16.4717%" height="21" fill="rgb(255,189,189)" fg:x="1629704" fg:w="532892"/>
            <text x="50.6243%" y="553.50">            retur..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3391 (_get_level_indexer) (534,220 bytes, 16.51%)</title>
            <rect x="50.3466%" y="474" width="16.5128%" height="21" fill="rgb(255,189,189)" fg:x="1628808" fg:w="534220"/>
            <text x="50.5966%" y="487.50">/Users/hal/minifor..</text>
        </g>
        <g>
            <title>            idx = self._get_loc_single_level_index(level_index, key) (534,220 bytes, 16.51%)</title>
            <rect x="50.3466%" y="496" width="16.5128%" height="21" fill="rgb(255,189,189)" fg:x="1628808" fg:w="534220"/>
            <text x="50.5966%" y="509.50">            idx =..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2014 (_lexsort_depth) (16,732 bytes, 0.52%)</title>
            <rect x="66.8594%" y="518" width="0.5172%" height="21" fill="rgb(255,239,239)" fg:x="2163028" fg:w="16732"/>
            <text x="67.1094%" y="531.50"></text>
        </g>
        <g>
            <title>        return _lexsort_depth(self.codes, self.nlevels) (16,732 bytes, 0.52%)</title>
            <rect x="66.8594%" y="540" width="0.5172%" height="21" fill="rgb(255,239,239)" fg:x="2163028" fg:w="16732"/>
            <text x="67.1094%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4041 (_lexsort_depth) (16,134 bytes, 0.50%)</title>
            <rect x="66.8779%" y="562" width="0.4987%" height="21" fill="rgb(255,239,239)" fg:x="2163626" fg:w="16134"/>
            <text x="67.1279%" y="575.50"></text>
        </g>
        <g>
            <title>        if libalgos.is_lexsorted(int64_codes[:k]): (16,134 bytes, 0.50%)</title>
            <rect x="66.8779%" y="584" width="0.4987%" height="21" fill="rgb(255,239,239)" fg:x="2163626" fg:w="16134"/>
            <text x="67.1279%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3393 (_get_level_indexer) (16,974 bytes, 0.52%)</title>
            <rect x="66.8594%" y="474" width="0.5247%" height="21" fill="rgb(255,239,239)" fg:x="2163028" fg:w="16974"/>
            <text x="67.1094%" y="487.50"></text>
        </g>
        <g>
            <title>            if level &gt; 0 or self._lexsort_depth == 0: (16,974 bytes, 0.52%)</title>
            <rect x="66.8594%" y="496" width="0.5247%" height="21" fill="rgb(255,239,239)" fg:x="2163028" fg:w="16974"/>
            <text x="67.1094%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3290 (_get_loc_level) (565,430 bytes, 17.48%)</title>
            <rect x="49.9598%" y="430" width="17.4775%" height="21" fill="rgb(255,187,187)" fg:x="1616294" fg:w="565430"/>
            <text x="50.2098%" y="443.50">/Users/hal/miniforge..</text>
        </g>
        <g>
            <title>            indexer = self._get_level_indexer(key, level=level) (565,430 bytes, 17.48%)</title>
            <rect x="49.9598%" y="452" width="17.4775%" height="21" fill="rgb(255,187,187)" fg:x="1616294" fg:w="565430"/>
            <text x="50.2098%" y="465.50">            indexer..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:924 (_set_levels) (28,000 bytes, 0.87%)</title>
            <rect x="67.5673%" y="606" width="0.8655%" height="21" fill="rgb(255,236,236)" fg:x="2185932" fg:w="28000"/>
            <text x="67.8173%" y="619.50"></text>
        </g>
        <g>
            <title>            new_levels = FrozenList( (28,000 bytes, 0.87%)</title>
            <rect x="67.5673%" y="628" width="0.8655%" height="21" fill="rgb(255,236,236)" fg:x="2185932" fg:w="28000"/>
            <text x="67.8173%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:925 (&lt;genexpr&gt;) (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="650" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="663.50"></text>
        </g>
        <g>
            <title>                ensure_index(lev, copy=copy)._view() for lev in levels (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="672" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="694" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="707.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="716" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="738" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="751.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (27,456 bytes, 0.85%)</title>
            <rect x="67.5842%" y="760" width="0.8487%" height="21" fill="rgb(255,236,236)" fg:x="2186476" fg:w="27456"/>
            <text x="67.8342%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:350 (__new__) (28,568 bytes, 0.88%)</title>
            <rect x="67.5602%" y="562" width="0.8830%" height="21" fill="rgb(255,235,235)" fg:x="2185700" fg:w="28568"/>
            <text x="67.8102%" y="575.50"></text>
        </g>
        <g>
            <title>        result._set_levels(levels, copy=copy, validate=False) (28,568 bytes, 0.88%)</title>
            <rect x="67.5602%" y="584" width="0.8830%" height="21" fill="rgb(255,235,235)" fg:x="2185700" fg:w="28568"/>
            <text x="67.8102%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4139 (_coerce_indexer_frozen) (23,863 bytes, 0.74%)</title>
            <rect x="68.4432%" y="694" width="0.7376%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="23863"/>
            <text x="68.6932%" y="707.50"></text>
        </g>
        <g>
            <title>    array_like.flags.writeable = False (23,863 bytes, 0.74%)</title>
            <rect x="68.4432%" y="716" width="0.7376%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="23863"/>
            <text x="68.6932%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:351 (__new__) (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="562" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="575.50"></text>
        </g>
        <g>
            <title>        result._set_codes(codes, copy=copy, validate=False) (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="584" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1102 (_set_codes) (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="606" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="619.50"></text>
        </g>
        <g>
            <title>            new_codes = FrozenList( (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="628" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1103 (&lt;genexpr&gt;) (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="650" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="663.50"></text>
        </g>
        <g>
            <title>                _coerce_indexer_frozen(level_codes, lev, copy=copy).view() (24,117 bytes, 0.75%)</title>
            <rect x="68.4432%" y="672" width="0.7455%" height="21" fill="rgb(255,237,237)" fg:x="2214268" fg:w="24117"/>
            <text x="68.6932%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2209 (__getitem__) (55,435 bytes, 1.71%)</title>
            <rect x="67.5194%" y="518" width="1.7135%" height="21" fill="rgb(255,230,230)" fg:x="2184380" fg:w="55435"/>
            <text x="67.7694%" y="531.50"></text>
        </g>
        <g>
            <title>            return MultiIndex( (55,435 bytes, 1.71%)</title>
            <rect x="67.5194%" y="540" width="1.7135%" height="21" fill="rgb(255,230,230)" fg:x="2184380" fg:w="55435"/>
            <text x="67.7694%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3170 (maybe_mi_droplevels) (57,505 bytes, 1.78%)</title>
            <rect x="67.4938%" y="474" width="1.7775%" height="21" fill="rgb(255,230,230)" fg:x="2183552" fg:w="57505"/>
            <text x="67.7438%" y="487.50"></text>
        </g>
        <g>
            <title>            new_index = self[indexer] (57,505 bytes, 1.78%)</title>
            <rect x="67.4938%" y="496" width="1.7775%" height="21" fill="rgb(255,230,230)" fg:x="2183552" fg:w="57505"/>
            <text x="67.7438%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:2175 (_drop_level_numbers) (34,592 bytes, 1.07%)</title>
            <rect x="69.2876%" y="518" width="1.0692%" height="21" fill="rgb(255,234,234)" fg:x="2241585" fg:w="34592"/>
            <text x="69.5376%" y="531.50"></text>
        </g>
        <g>
            <title>        new_levels = list(self.levels) (34,592 bytes, 1.07%)</title>
            <rect x="69.2876%" y="540" width="1.0692%" height="21" fill="rgb(255,234,234)" fg:x="2241585" fg:w="34592"/>
            <text x="69.5376%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:897 (levels) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="562" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="575.50"></text>
        </g>
        <g>
            <title>        result = [x._rename(name=name) for x, name in zip(self._levels, self._names)] (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="584" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:787 (_rename) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="606" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="619.50"></text>
        </g>
        <g>
            <title>        result = self._view() (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="628" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="650" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="663.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="672" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="694" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="707.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (33,920 bytes, 1.05%)</title>
            <rect x="69.3084%" y="716" width="1.0485%" height="21" fill="rgb(255,234,234)" fg:x="2242257" fg:w="33920"/>
            <text x="69.5584%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:924 (_set_levels) (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="606" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="619.50"></text>
        </g>
        <g>
            <title>            new_levels = FrozenList( (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="628" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:925 (&lt;genexpr&gt;) (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="650" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="663.50"></text>
        </g>
        <g>
            <title>                ensure_index(lev, copy=copy)._view() for lev in levels (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="672" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="694" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="707.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (10,160 bytes, 0.31%)</title>
            <rect x="70.4065%" y="716" width="0.3140%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10160"/>
            <text x="70.6565%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (9,920 bytes, 0.31%)</title>
            <rect x="70.4139%" y="738" width="0.3066%" height="21" fill="rgb(255,241,241)" fg:x="2278025" fg:w="9920"/>
            <text x="70.6639%" y="751.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (9,920 bytes, 0.31%)</title>
            <rect x="70.4139%" y="760" width="0.3066%" height="21" fill="rgb(255,241,241)" fg:x="2278025" fg:w="9920"/>
            <text x="70.6639%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:350 (__new__) (10,496 bytes, 0.32%)</title>
            <rect x="70.4065%" y="562" width="0.3244%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10496"/>
            <text x="70.6565%" y="575.50"></text>
        </g>
        <g>
            <title>        result._set_levels(levels, copy=copy, validate=False) (10,496 bytes, 0.32%)</title>
            <rect x="70.4065%" y="584" width="0.3244%" height="21" fill="rgb(255,241,241)" fg:x="2277785" fg:w="10496"/>
            <text x="70.6565%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:351 (__new__) (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="562" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="575.50"></text>
        </g>
        <g>
            <title>        result._set_codes(codes, copy=copy, validate=False) (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="584" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1102 (_set_codes) (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="606" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="619.50"></text>
        </g>
        <g>
            <title>            new_codes = FrozenList( (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="628" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="641.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1103 (&lt;genexpr&gt;) (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="650" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="663.50"></text>
        </g>
        <g>
            <title>                _coerce_indexer_frozen(level_codes, lev, copy=copy).view() (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="672" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4139 (_coerce_indexer_frozen) (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="694" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="707.50"></text>
        </g>
        <g>
            <title>    array_like.flags.writeable = False (9,996 bytes, 0.31%)</title>
            <rect x="70.7310%" y="716" width="0.3090%" height="21" fill="rgb(255,241,241)" fg:x="2288281" fg:w="9996"/>
            <text x="70.9810%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3302 (_get_loc_level) (116,777 bytes, 3.61%)</title>
            <rect x="67.4373%" y="430" width="3.6096%" height="21" fill="rgb(255,221,221)" fg:x="2181724" fg:w="116777"/>
            <text x="67.6873%" y="443.50">/U..</text>
        </g>
        <g>
            <title>                result_index = maybe_mi_droplevels(indexer, [level]) (116,777 bytes, 3.61%)</title>
            <rect x="67.4373%" y="452" width="3.6096%" height="21" fill="rgb(255,221,221)" fg:x="2181724" fg:w="116777"/>
            <text x="67.6873%" y="465.50"> ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3173 (maybe_mi_droplevels) (57,444 bytes, 1.78%)</title>
            <rect x="69.2713%" y="474" width="1.7756%" height="21" fill="rgb(255,230,230)" fg:x="2241057" fg:w="57444"/>
            <text x="69.5213%" y="487.50"></text>
        </g>
        <g>
            <title>                new_index = new_index._drop_level_numbers([i]) (57,444 bytes, 1.78%)</title>
            <rect x="69.2713%" y="496" width="1.7756%" height="21" fill="rgb(255,230,230)" fg:x="2241057" fg:w="57444"/>
            <text x="69.5213%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:2210 (_drop_level_numbers) (20,716 bytes, 0.64%)</title>
            <rect x="70.4065%" y="518" width="0.6403%" height="21" fill="rgb(255,238,238)" fg:x="2277785" fg:w="20716"/>
            <text x="70.6565%" y="531.50"></text>
        </g>
        <g>
            <title>            return MultiIndex( (20,716 bytes, 0.64%)</title>
            <rect x="70.4065%" y="540" width="0.6403%" height="21" fill="rgb(255,238,238)" fg:x="2277785" fg:w="20716"/>
            <text x="70.6565%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:3150 (get_loc_level) (683,861 bytes, 21.14%)</title>
            <rect x="49.9598%" y="386" width="21.1382%" height="21" fill="rgb(255,181,181)" fg:x="1616294" fg:w="683861"/>
            <text x="50.2098%" y="399.50">/Users/hal/miniforge3/li..</text>
        </g>
        <g>
            <title>        loc, mi = self._get_loc_level(key, level=level) (683,861 bytes, 21.14%)</title>
            <rect x="49.9598%" y="408" width="21.1382%" height="21" fill="rgb(255,181,181)" fg:x="1616294" fg:w="683861"/>
            <text x="50.2098%" y="421.50">        loc, mi = self...</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4274 (xs) (686,855 bytes, 21.23%)</title>
            <rect x="49.9414%" y="342" width="21.2307%" height="21" fill="rgb(255,180,180)" fg:x="1615698" fg:w="686855"/>
            <text x="50.1914%" y="355.50">/Users/hal/miniforge3/li..</text>
        </g>
        <g>
            <title>            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level) (686,855 bytes, 21.23%)</title>
            <rect x="49.9414%" y="364" width="21.2307%" height="21" fill="rgb(255,180,180)" fg:x="1615698" fg:w="686855"/>
            <text x="50.1914%" y="377.50">            loc, new_ax..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1180 (__getitem__) (38,188 bytes, 1.18%)</title>
            <rect x="71.1721%" y="386" width="1.1804%" height="21" fill="rgb(255,233,233)" fg:x="2302553" fg:w="38188"/>
            <text x="71.4221%" y="399.50"></text>
        </g>
        <g>
            <title>            key = tuple(list(x) if is_iterator(x) else x for x in key) (38,188 bytes, 1.18%)</title>
            <rect x="71.1721%" y="408" width="1.1804%" height="21" fill="rgb(255,233,233)" fg:x="2302553" fg:w="38188"/>
            <text x="71.4221%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1181 (__getitem__) (38,150 bytes, 1.18%)</title>
            <rect x="72.3525%" y="386" width="1.1792%" height="21" fill="rgb(255,233,233)" fg:x="2340741" fg:w="38150"/>
            <text x="72.6025%" y="399.50"></text>
        </g>
        <g>
            <title>            key = tuple(com.apply_if_callable(x, self.obj) for x in key) (38,150 bytes, 1.18%)</title>
            <rect x="72.3525%" y="408" width="1.1792%" height="21" fill="rgb(255,233,233)" fg:x="2340741" fg:w="38150"/>
            <text x="72.6025%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:924 (_set_levels) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="782" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="795.50"></text>
        </g>
        <g>
            <title>            new_levels = FrozenList( (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="804" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:925 (&lt;genexpr&gt;) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="826" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="839.50"></text>
        </g>
        <g>
            <title>                ensure_index(lev, copy=copy)._view() for lev in levels (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="848" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="870" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="883.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="892" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="914" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="927.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (16,000 bytes, 0.49%)</title>
            <rect x="82.2530%" y="936" width="0.4946%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16000"/>
            <text x="82.5030%" y="949.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:350 (__new__) (16,336 bytes, 0.50%)</title>
            <rect x="82.2530%" y="738" width="0.5049%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16336"/>
            <text x="82.5030%" y="751.50"></text>
        </g>
        <g>
            <title>        result._set_levels(levels, copy=copy, validate=False) (16,336 bytes, 0.50%)</title>
            <rect x="82.2530%" y="760" width="0.5049%" height="21" fill="rgb(255,239,239)" fg:x="2661041" fg:w="16336"/>
            <text x="82.5030%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:351 (__new__) (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="738" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="751.50"></text>
        </g>
        <g>
            <title>        result._set_codes(codes, copy=copy, validate=False) (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="760" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1102 (_set_codes) (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="782" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="795.50"></text>
        </g>
        <g>
            <title>            new_codes = FrozenList( (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="804" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1103 (&lt;genexpr&gt;) (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="826" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="839.50"></text>
        </g>
        <g>
            <title>                _coerce_indexer_frozen(level_codes, lev, copy=copy).view() (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="848" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4139 (_coerce_indexer_frozen) (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="870" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="883.50"></text>
        </g>
        <g>
            <title>    array_like.flags.writeable = False (15,533 bytes, 0.48%)</title>
            <rect x="82.7580%" y="892" width="0.4801%" height="21" fill="rgb(255,239,239)" fg:x="2677377" fg:w="15533"/>
            <text x="83.0080%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2227 (_getitem_slice) (32,093 bytes, 0.99%)</title>
            <rect x="82.2530%" y="694" width="0.9920%" height="21" fill="rgb(255,235,235)" fg:x="2661041" fg:w="32093"/>
            <text x="82.5030%" y="707.50"></text>
        </g>
        <g>
            <title>        return type(self)( (32,093 bytes, 0.99%)</title>
            <rect x="82.2530%" y="716" width="0.9920%" height="21" fill="rgb(255,235,235)" fg:x="2661041" fg:w="32093"/>
            <text x="82.5030%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/blocks.py:2529 (slice_block_rows) (37,016 bytes, 1.14%)</title>
            <rect x="83.3138%" y="694" width="1.1442%" height="21" fill="rgb(255,234,234)" fg:x="2695360" fg:w="37016"/>
            <text x="83.5638%" y="707.50"></text>
        </g>
        <g>
            <title>        return type(self)(new_values, self._mgr_locs, ndim=self.ndim, refs=self.refs) (37,016 bytes, 1.14%)</title>
            <rect x="83.3138%" y="716" width="1.1442%" height="21" fill="rgb(255,234,234)" fg:x="2695360" fg:w="37016"/>
            <text x="83.5638%" y="729.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4369 (_slice) (349,295 bytes, 10.80%)</title>
            <rect x="73.6714%" y="650" width="10.7967%" height="21" fill="rgb(255,200,200)" fg:x="2383409" fg:w="349295"/>
            <text x="73.9214%" y="663.50">/Users/hal/..</text>
        </g>
        <g>
            <title>        new_mgr = self._mgr.get_slice(slobj, axis=axis) (349,295 bytes, 10.80%)</title>
            <rect x="73.6714%" y="672" width="10.7967%" height="21" fill="rgb(255,200,200)" fg:x="2383409" fg:w="349295"/>
            <text x="73.9214%" y="685.50">        ne..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4370 (_slice) (6,576 bytes, 0.20%)</title>
            <rect x="84.4681%" y="650" width="0.2033%" height="21" fill="rgb(255,243,243)" fg:x="2732704" fg:w="6576"/>
            <text x="84.7181%" y="663.50"></text>
        </g>
        <g>
            <title>        result = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes) (6,576 bytes, 0.20%)</title>
            <rect x="84.4681%" y="672" width="0.2033%" height="21" fill="rgb(255,243,243)" fg:x="2732704" fg:w="6576"/>
            <text x="84.7181%" y="685.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1765 (_get_slice_axis) (358,663 bytes, 11.09%)</title>
            <rect x="73.6256%" y="606" width="11.0863%" height="21" fill="rgb(255,200,200)" fg:x="2381929" fg:w="358663"/>
            <text x="73.8756%" y="619.50">/Users/hal/m..</text>
        </g>
        <g>
            <title>        return self.obj._slice(slice_obj, axis=axis) (358,663 bytes, 11.09%)</title>
            <rect x="73.6256%" y="628" width="11.0863%" height="21" fill="rgb(255,200,200)" fg:x="2381929" fg:w="358663"/>
            <text x="73.8756%" y="641.50">        ret..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1729 (_getitem_axis) (359,563 bytes, 11.11%)</title>
            <rect x="73.6256%" y="562" width="11.1141%" height="21" fill="rgb(255,200,200)" fg:x="2381929" fg:w="359563"/>
            <text x="73.8756%" y="575.50">/Users/hal/m..</text>
        </g>
        <g>
            <title>            return self._get_slice_axis(key, axis=axis) (359,563 bytes, 11.11%)</title>
            <rect x="73.6256%" y="584" width="11.1141%" height="21" fill="rgb(255,200,200)" fg:x="2381929" fg:w="359563"/>
            <text x="73.8756%" y="597.50">           ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:890 (take) (17,330 bytes, 0.54%)</title>
            <rect x="84.8920%" y="738" width="0.5357%" height="21" fill="rgb(255,239,239)" fg:x="2746418" fg:w="17330"/>
            <text x="85.1420%" y="751.50"></text>
        </g>
        <g>
            <title>        n = self.shape[axis] (17,330 bytes, 0.54%)</title>
            <rect x="84.8920%" y="760" width="0.5357%" height="21" fill="rgb(255,239,239)" fg:x="2746418" fg:w="17330"/>
            <text x="85.1420%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/base.py:84 (shape) (17,330 bytes, 0.54%)</title>
            <rect x="84.8920%" y="782" width="0.5357%" height="21" fill="rgb(255,239,239)" fg:x="2746418" fg:w="17330"/>
            <text x="85.1420%" y="795.50"></text>
        </g>
        <g>
            <title>        return tuple(len(ax) for ax in self.axes) (17,330 bytes, 0.54%)</title>
            <rect x="84.8920%" y="804" width="0.5357%" height="21" fill="rgb(255,239,239)" fg:x="2746418" fg:w="17330"/>
            <text x="85.1420%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:350 (__new__) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="826" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="839.50"></text>
        </g>
        <g>
            <title>        result._set_levels(levels, copy=copy, validate=False) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="848" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:924 (_set_levels) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="870" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="883.50"></text>
        </g>
        <g>
            <title>            new_levels = FrozenList( (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="892" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:925 (&lt;genexpr&gt;) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="914" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="927.50"></text>
        </g>
        <g>
            <title>                ensure_index(lev, copy=copy)._view() for lev in levels (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="936" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="949.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:777 (_view) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="958" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="971.50"></text>
        </g>
        <g>
            <title>        result = self._simple_new(self._values, name=self._name, refs=self._references) (9,840 bytes, 0.30%)</title>
            <rect x="85.4277%" y="980" width="0.3042%" height="21" fill="rgb(255,241,241)" fg:x="2763748" fg:w="9840"/>
            <text x="85.6777%" y="993.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/base.py:670 (_simple_new) (9,600 bytes, 0.30%)</title>
            <rect x="85.4351%" y="1002" width="0.2967%" height="21" fill="rgb(255,241,241)" fg:x="2763988" fg:w="9600"/>
            <text x="85.6851%" y="1015.50"></text>
        </g>
        <g>
            <title>        result._references.add_index_reference(result) (9,600 bytes, 0.30%)</title>
            <rect x="85.4351%" y="1024" width="0.2967%" height="21" fill="rgb(255,241,241)" fg:x="2763988" fg:w="9600"/>
            <text x="85.6851%" y="1037.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:893 (take) (19,444 bytes, 0.60%)</title>
            <rect x="85.4277%" y="738" width="0.6010%" height="21" fill="rgb(255,238,238)" fg:x="2763748" fg:w="19444"/>
            <text x="85.6777%" y="751.50"></text>
        </g>
        <g>
            <title>        new_labels = self.axes[axis].take(indexer) (19,444 bytes, 0.60%)</title>
            <rect x="85.4277%" y="760" width="0.6010%" height="21" fill="rgb(255,238,238)" fg:x="2763748" fg:w="19444"/>
            <text x="85.6777%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:2263 (take) (19,444 bytes, 0.60%)</title>
            <rect x="85.4277%" y="782" width="0.6010%" height="21" fill="rgb(255,238,238)" fg:x="2763748" fg:w="19444"/>
            <text x="85.6777%" y="795.50"></text>
        </g>
        <g>
            <title>        return MultiIndex( (19,444 bytes, 0.60%)</title>
            <rect x="85.4277%" y="804" width="0.6010%" height="21" fill="rgb(255,238,238)" fg:x="2763748" fg:w="19444"/>
            <text x="85.6777%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:351 (__new__) (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="826" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="839.50"></text>
        </g>
        <g>
            <title>        result._set_codes(codes, copy=copy, validate=False) (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="848" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1102 (_set_codes) (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="870" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="883.50"></text>
        </g>
        <g>
            <title>            new_codes = FrozenList( (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="892" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:1103 (&lt;genexpr&gt;) (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="914" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="927.50"></text>
        </g>
        <g>
            <title>                _coerce_indexer_frozen(level_codes, lev, copy=copy).view() (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="936" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="949.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexes/multi.py:4139 (_coerce_indexer_frozen) (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="958" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="971.50"></text>
        </g>
        <g>
            <title>    array_like.flags.writeable = False (9,604 bytes, 0.30%)</title>
            <rect x="85.7318%" y="980" width="0.2969%" height="21" fill="rgb(255,241,241)" fg:x="2773588" fg:w="9604"/>
            <text x="85.9818%" y="993.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/geopandas/array.py:1213 (take) (10,976 bytes, 0.34%)</title>
            <rect x="86.0614%" y="914" width="0.3393%" height="21" fill="rgb(255,241,241)" fg:x="2784250" fg:w="10976"/>
            <text x="86.3114%" y="927.50"></text>
        </g>
        <g>
            <title>            result[~shapely.is_valid_input(result)] = None (10,976 bytes, 0.34%)</title>
            <rect x="86.0614%" y="936" width="0.3393%" height="21" fill="rgb(255,241,241)" fg:x="2784250" fg:w="10976"/>
            <text x="86.3114%" y="949.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/array_algos/take.py:114 (take_nd) (12,490 bytes, 0.39%)</title>
            <rect x="86.0434%" y="870" width="0.3861%" height="21" fill="rgb(255,240,240)" fg:x="2783666" fg:w="12490"/>
            <text x="86.2934%" y="883.50"></text>
        </g>
        <g>
            <title>        return arr.take(indexer, fill_value=fill_value, allow_fill=allow_fill) (12,490 bytes, 0.39%)</title>
            <rect x="86.0434%" y="892" width="0.3861%" height="21" fill="rgb(255,240,240)" fg:x="2783666" fg:w="12490"/>
            <text x="86.2934%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/array_algos/take.py:117 (take_nd) (12,772 bytes, 0.39%)</title>
            <rect x="86.4294%" y="870" width="0.3948%" height="21" fill="rgb(255,240,240)" fg:x="2796156" fg:w="12772"/>
            <text x="86.6794%" y="883.50"></text>
        </g>
        <g>
            <title>    return _take_nd_ndarray(arr, indexer, axis, fill_value, allow_fill) (12,772 bytes, 0.39%)</title>
            <rect x="86.4294%" y="892" width="0.3948%" height="21" fill="rgb(255,240,240)" fg:x="2796156" fg:w="12772"/>
            <text x="86.6794%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/blocks.py:1307 (take_nd) (26,502 bytes, 0.82%)</title>
            <rect x="86.0434%" y="826" width="0.8192%" height="21" fill="rgb(255,236,236)" fg:x="2783666" fg:w="26502"/>
            <text x="86.2934%" y="839.50"></text>
        </g>
        <g>
            <title>        new_values = algos.take_nd( (26,502 bytes, 0.82%)</title>
            <rect x="86.0434%" y="848" width="0.8192%" height="21" fill="rgb(255,236,236)" fg:x="2783666" fg:w="26502"/>
            <text x="86.2934%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:688 (reindex_indexer) (29,928 bytes, 0.93%)</title>
            <rect x="86.0434%" y="782" width="0.9251%" height="21" fill="rgb(255,235,235)" fg:x="2783666" fg:w="29928"/>
            <text x="86.2934%" y="795.50"></text>
        </g>
        <g>
            <title>                blk.take_nd( (29,928 bytes, 0.93%)</title>
            <rect x="86.0434%" y="804" width="0.9251%" height="21" fill="rgb(255,235,235)" fg:x="2783666" fg:w="29928"/>
            <text x="86.2934%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:704 (reindex_indexer) (17,608 bytes, 0.54%)</title>
            <rect x="87.0265%" y="782" width="0.5443%" height="21" fill="rgb(255,238,238)" fg:x="2815472" fg:w="17608"/>
            <text x="87.2765%" y="795.50"></text>
        </g>
        <g>
            <title>            new_mgr._blknos = self.blknos.copy() (17,608 bytes, 0.54%)</title>
            <rect x="87.0265%" y="804" width="0.5443%" height="21" fill="rgb(255,238,238)" fg:x="2815472" fg:w="17608"/>
            <text x="87.2765%" y="817.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:192 (blknos) (17,360 bytes, 0.54%)</title>
            <rect x="87.0341%" y="826" width="0.5366%" height="21" fill="rgb(255,239,239)" fg:x="2815720" fg:w="17360"/>
            <text x="87.2841%" y="839.50"></text>
        </g>
        <g>
            <title>            self._rebuild_blknos_and_blklocs() (17,360 bytes, 0.54%)</title>
            <rect x="87.0341%" y="848" width="0.5366%" height="21" fill="rgb(255,239,239)" fg:x="2815720" fg:w="17360"/>
            <text x="87.2841%" y="861.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/base.py:84 (shape) (17,024 bytes, 0.53%)</title>
            <rect x="87.0445%" y="870" width="0.5262%" height="21" fill="rgb(255,239,239)" fg:x="2816056" fg:w="17024"/>
            <text x="87.2945%" y="883.50"></text>
        </g>
        <g>
            <title>        return tuple(len(ax) for ax in self.axes) (17,024 bytes, 0.53%)</title>
            <rect x="87.0445%" y="892" width="0.5262%" height="21" fill="rgb(255,239,239)" fg:x="2816056" fg:w="17024"/>
            <text x="87.2945%" y="905.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4133 (take) (88,742 bytes, 2.74%)</title>
            <rect x="84.8349%" y="694" width="2.7430%" height="21" fill="rgb(255,225,225)" fg:x="2744570" fg:w="88742"/>
            <text x="85.0849%" y="707.50">/..</text>
        </g>
        <g>
            <title>        new_data = self._mgr.take( (88,742 bytes, 2.74%)</title>
            <rect x="84.8349%" y="716" width="2.7430%" height="21" fill="rgb(255,225,225)" fg:x="2744570" fg:w="88742"/>
            <text x="85.0849%" y="729.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/internals/managers.py:894 (take) (50,120 bytes, 1.55%)</title>
            <rect x="86.0287%" y="738" width="1.5492%" height="21" fill="rgb(255,231,231)" fg:x="2783192" fg:w="50120"/>
            <text x="86.2787%" y="751.50"></text>
        </g>
        <g>
            <title>        return self.reindex_indexer( (50,120 bytes, 1.55%)</title>
            <rect x="86.0287%" y="760" width="1.5492%" height="21" fill="rgb(255,231,231)" fg:x="2783192" fg:w="50120"/>
            <text x="86.2787%" y="773.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1211 (_getbool_axis) (95,914 bytes, 2.96%)</title>
            <rect x="84.7747%" y="606" width="2.9647%" height="21" fill="rgb(255,224,224)" fg:x="2742624" fg:w="95914"/>
            <text x="85.0247%" y="619.50">/..</text>
        </g>
        <g>
            <title>        return self.obj._take_with_is_copy(inds, axis=axis) (95,914 bytes, 2.96%)</title>
            <rect x="84.7747%" y="628" width="2.9647%" height="21" fill="rgb(255,224,224)" fg:x="2742624" fg:w="95914"/>
            <text x="85.0247%" y="641.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4153 (_take_with_is_copy) (93,968 bytes, 2.90%)</title>
            <rect x="84.8349%" y="650" width="2.9046%" height="21" fill="rgb(255,224,224)" fg:x="2744570" fg:w="93968"/>
            <text x="85.0849%" y="663.50">/..</text>
        </g>
        <g>
            <title>        result = self.take(indices=indices, axis=axis) (93,968 bytes, 2.90%)</title>
            <rect x="84.8349%" y="672" width="2.9046%" height="21" fill="rgb(255,224,224)" fg:x="2744570" fg:w="93968"/>
            <text x="85.0849%" y="685.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1739 (_getitem_axis) (97,906 bytes, 3.03%)</title>
            <rect x="84.7398%" y="562" width="3.0263%" height="21" fill="rgb(255,223,223)" fg:x="2741492" fg:w="97906"/>
            <text x="84.9898%" y="575.50">/..</text>
        </g>
        <g>
            <title>            return self._getbool_axis(key, axis=axis) (97,906 bytes, 3.03%)</title>
            <rect x="84.7398%" y="584" width="3.0263%" height="21" fill="rgb(255,223,223)" fg:x="2741492" fg:w="97906"/>
            <text x="84.9898%" y="597.50">..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1153 (_getitem_nested_tuple) (458,031 bytes, 14.16%)</title>
            <rect x="73.6175%" y="518" width="14.1578%" height="21" fill="rgb(255,193,193)" fg:x="2381665" fg:w="458031"/>
            <text x="73.8675%" y="531.50">/Users/hal/mini..</text>
        </g>
        <g>
            <title>            obj = getattr(obj, self.name)._getitem_axis(key, axis=axis) (458,031 bytes, 14.16%)</title>
            <rect x="73.6175%" y="540" width="14.1578%" height="21" fill="rgb(255,193,193)" fg:x="2381665" fg:w="458031"/>
            <text x="73.8675%" y="553.50">            ob..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1041 (_getitem_lowerdim) (458,957 bytes, 14.19%)</title>
            <rect x="73.6175%" y="474" width="14.1864%" height="21" fill="rgb(255,193,193)" fg:x="2381665" fg:w="458957"/>
            <text x="73.8675%" y="487.50">/Users/hal/minif..</text>
        </g>
        <g>
            <title>            return self._getitem_nested_tuple(tup) (458,957 bytes, 14.19%)</title>
            <rect x="73.6175%" y="496" width="14.1864%" height="21" fill="rgb(255,193,193)" fg:x="2381665" fg:w="458957"/>
            <text x="73.8675%" y="509.50">            ret..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1692 (_getitem_tuple) (460,305 bytes, 14.23%)</title>
            <rect x="73.6104%" y="430" width="14.2281%" height="21" fill="rgb(255,193,193)" fg:x="2381435" fg:w="460305"/>
            <text x="73.8604%" y="443.50">/Users/hal/minif..</text>
        </g>
        <g>
            <title>            return self._getitem_lowerdim(tup) (460,305 bytes, 14.23%)</title>
            <rect x="73.6104%" y="452" width="14.2281%" height="21" fill="rgb(255,193,193)" fg:x="2381435" fg:w="460305"/>
            <text x="73.8604%" y="465.50">            ret..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/indexing.py:1184 (__getitem__) (463,419 bytes, 14.32%)</title>
            <rect x="73.5317%" y="386" width="14.3243%" height="21" fill="rgb(255,193,193)" fg:x="2378891" fg:w="463419"/>
            <text x="73.7817%" y="399.50">/Users/hal/minif..</text>
        </g>
        <g>
            <title>            return self._getitem_tuple(key) (463,419 bytes, 14.32%)</title>
            <rect x="73.5317%" y="408" width="14.3243%" height="21" fill="rgb(255,193,193)" fg:x="2378891" fg:w="463419"/>
            <text x="73.7817%" y="421.50">            ret..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/pandas/core/generic.py:4281 (xs) (540,361 bytes, 16.70%)</title>
            <rect x="71.1721%" y="342" width="16.7026%" height="21" fill="rgb(255,188,188)" fg:x="2302553" fg:w="540361"/>
            <text x="71.4221%" y="355.50">/Users/hal/miniforg..</text>
        </g>
        <g>
            <title>            result = self.iloc[indexer] (540,361 bytes, 16.70%)</title>
            <rect x="71.1721%" y="364" width="16.7026%" height="21" fill="rgb(255,188,188)" fg:x="2302553" fg:w="540361"/>
            <text x="71.4221%" y="377.50">            result..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:250 (time_between) (1,228,394 bytes, 37.97%)</title>
            <rect x="49.9132%" y="298" width="37.9698%" height="21" fill="rgb(255,157,157)" fg:x="1614788" fg:w="1228394"/>
            <text x="50.1632%" y="311.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/D..</text>
        </g>
        <g>
            <title>    edge_between_nodes = gdf_edges.xs(start_node_id, level=&quot;u&quot;).xs(end_node_id, level=&quot;v&quot;) (1,228,394 bytes, 37.97%)</title>
            <rect x="49.9132%" y="320" width="37.9698%" height="21" fill="rgb(255,157,157)" fg:x="1614788" fg:w="1228394"/>
            <text x="50.1632%" y="333.50">    edge_between_nodes = gdf_edges.xs(start_n..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:252 (time_between) (12,431 bytes, 0.38%)</title>
            <rect x="87.8830%" y="298" width="0.3842%" height="21" fill="rgb(255,240,240)" fg:x="2843182" fg:w="12431"/>
            <text x="88.1330%" y="311.50"></text>
        </g>
        <g>
            <title>    road_speed_mph = edge_between_nodes[&quot;maxspeed&quot;][0].item() (12,431 bytes, 0.38%)</title>
            <rect x="87.8830%" y="320" width="0.3842%" height="21" fill="rgb(255,240,240)" fg:x="2843182" fg:w="12431"/>
            <text x="88.1330%" y="333.50"></text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:156 (calc_path_time) (1,249,309 bytes, 38.62%)</title>
            <rect x="49.8545%" y="254" width="38.6162%" height="21" fill="rgb(255,156,156)" fg:x="1612888" fg:w="1249309"/>
            <text x="50.1045%" y="267.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/Do..</text>
        </g>
        <g>
            <title>        time = np.sum([time_between(path[i], path[i+1]) (1,249,309 bytes, 38.62%)</title>
            <rect x="49.8545%" y="276" width="38.6162%" height="21" fill="rgb(255,156,156)" fg:x="1612888" fg:w="1249309"/>
            <text x="50.1045%" y="289.50">        time = np.sum([time_between(path[i], p..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:124 (search_step) (1,550,453 bytes, 47.92%)</title>
            <rect x="40.5639%" y="210" width="47.9246%" height="21" fill="rgb(255,146,146)" fg:x="1312320" fg:w="1550453"/>
            <text x="40.8139%" y="223.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_..</text>
        </g>
        <g>
            <title>                    cost_to_reach = (next_node.cost_to_reach + self.calc_path_time([next_node.node_id, node_id]) if search_type in [SearchType.UCS, SearchType.A_STAR] else np.nan), (1,550,453 bytes, 47.92%)</title>
            <rect x="40.5639%" y="232" width="47.9246%" height="21" fill="rgb(255,146,146)" fg:x="1312320" fg:w="1550453"/>
            <text x="40.8139%" y="245.50">                    cost_to_reach = (next_node.cost_to_re..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:127 (search_step) (95,808 bytes, 2.96%)</title>
            <rect x="88.4886%" y="210" width="2.9614%" height="21" fill="rgb(255,224,224)" fg:x="2862773" fg:w="95808"/>
            <text x="88.7386%" y="223.50">/..</text>
        </g>
        <g>
            <title>        self.closed.append(next_node) (95,808 bytes, 2.96%)</title>
            <rect x="88.4886%" y="232" width="2.9614%" height="21" fill="rgb(255,224,224)" fg:x="2862773" fg:w="95808"/>
            <text x="88.7386%" y="245.50">..</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search) (2,958,379 bytes, 91.44%)</title>
            <rect x="0.0339%" y="166" width="91.4437%" height="21" fill="rgb(255,106,106)" fg:x="1096" fg:w="2958379"/>
            <text x="0.2839%" y="179.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:112 (run_search)</text>
        </g>
        <g>
            <title>            self.search_step(search_type=search_type) (2,958,379 bytes, 91.44%)</title>
            <rect x="0.0339%" y="188" width="91.4437%" height="21" fill="rgb(255,106,106)" fg:x="1096" fg:w="2958379"/>
            <text x="0.2839%" y="201.50">            self.search_step(search_type=search_type)</text>
        </g>
        <g>
            <title>/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;) (2,960,255 bytes, 91.50%)</title>
            <rect x="0.0099%" y="122" width="91.5017%" height="21" fill="rgb(255,106,106)" fg:x="320" fg:w="2960255"/>
            <text x="0.2599%" y="135.50">/Users/hal/Library/CloudStorage/OneDrive-MMU/Documents/AI_Principles/map_search/search_map_dfs.py:312 (&lt;lambda&gt;)</text>
        </g>
        <g>
            <title>profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;) (2,960,255 bytes, 91.50%)</title>
            <rect x="0.0099%" y="144" width="91.5017%" height="21" fill="rgb(255,106,106)" fg:x="320" fg:w="2960255"/>
            <text x="0.2599%" y="157.50">profile(lambda: searcher.run_search(search_type=method), &quot;/tmp/fil-result&quot;)</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:151 (disable_thread_pools) (7,542 bytes, 0.23%)</title>
            <rect x="91.5344%" y="166" width="0.2331%" height="21" fill="rgb(255,242,242)" fg:x="2961313" fg:w="7542"/>
            <text x="91.7844%" y="179.50"></text>
        </g>
        <g>
            <title>        from numexpr import set_num_threads as numexpr_set_num_threads (7,542 bytes, 0.23%)</title>
            <rect x="91.5344%" y="188" width="0.2331%" height="21" fill="rgb(255,242,242)" fg:x="2961313" fg:w="7542"/>
            <text x="91.7844%" y="201.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:586 (__init__) (39,495 bytes, 1.22%)</title>
            <rect x="91.8217%" y="254" width="1.2208%" height="21" fill="rgb(255,233,233)" fg:x="2970607" fg:w="39495"/>
            <text x="92.0717%" y="267.50"></text>
        </g>
        <g>
            <title>        self._original_info = self._controller.info() (39,495 bytes, 1.22%)</title>
            <rect x="91.8217%" y="276" width="1.2208%" height="21" fill="rgb(255,233,233)" fg:x="2970607" fg:w="39495"/>
            <text x="92.0717%" y="289.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:829 (info) (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="298" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="311.50"></text>
        </g>
        <g>
            <title>        return [lib_controller.info() for lib_controller in self.lib_controllers] (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="320" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="333.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:125 (info) (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="342" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="355.50"></text>
        </g>
        <g>
            <title>            &quot;num_threads&quot;: self.num_threads, (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="364" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:138 (num_threads) (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="386" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="399.50"></text>
        </g>
        <g>
            <title>        return self.get_num_threads() (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="408" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:495 (get_num_threads) (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="430" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="443.50"></text>
        </g>
        <g>
            <title>        return get_func() (39,217 bytes, 1.21%)</title>
            <rect x="91.8303%" y="452" width="1.2122%" height="21" fill="rgb(255,233,233)" fg:x="2970885" fg:w="39217"/>
            <text x="92.0803%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1024 (_find_libraries_with_dyld) (6,688 bytes, 0.21%)</title>
            <rect x="93.1036%" y="342" width="0.2067%" height="21" fill="rgb(255,243,243)" fg:x="3012078" fg:w="6688"/>
            <text x="93.3536%" y="355.50"></text>
        </g>
        <g>
            <title>        libc = self._get_libc() (6,688 bytes, 0.21%)</title>
            <rect x="93.1036%" y="364" width="0.2067%" height="21" fill="rgb(255,243,243)" fg:x="3012078" fg:w="6688"/>
            <text x="93.3536%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1037 (_find_libraries_with_dyld) (69,204 bytes, 2.14%)</title>
            <rect x="93.3271%" y="342" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3019310" fg:w="69204"/>
            <text x="93.5771%" y="355.50"></text>
        </g>
        <g>
            <title>            filepath = filepath.decode(&quot;utf-8&quot;) (69,204 bytes, 2.14%)</title>
            <rect x="93.3271%" y="364" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3019310" fg:w="69204"/>
            <text x="93.5771%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen posixpath&gt;:428 (realpath) (69,204 bytes, 2.14%)</title>
            <rect x="96.9021%" y="474" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3134966" fg:w="69204"/>
            <text x="97.1521%" y="487.50"></text>
        </g>
        <g>
            <title> (69,204 bytes, 2.14%)</title>
            <rect x="96.9021%" y="496" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3134966" fg:w="69204"/>
            <text x="97.1521%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen posixpath&gt;:417 (abspath) (69,204 bytes, 2.14%)</title>
            <rect x="96.9021%" y="518" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3134966" fg:w="69204"/>
            <text x="97.1521%" y="531.50"></text>
        </g>
        <g>
            <title> (69,204 bytes, 2.14%)</title>
            <rect x="96.9021%" y="540" width="2.1391%" height="21" fill="rgb(255,228,228)" fg:x="3134966" fg:w="69204"/>
            <text x="97.1521%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1134 (_make_controller_from_path) (116,080 bytes, 3.59%)</title>
            <rect x="95.4764%" y="386" width="3.5880%" height="21" fill="rgb(255,221,221)" fg:x="3088844" fg:w="116080"/>
            <text x="95.7264%" y="399.50">/U..</text>
        </g>
        <g>
            <title>        filepath = _realpath(filepath) (116,080 bytes, 3.59%)</title>
            <rect x="95.4764%" y="408" width="3.5880%" height="21" fill="rgb(255,221,221)" fg:x="3088844" fg:w="116080"/>
            <text x="95.7264%" y="421.50"> ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:548 (_realpath) (70,272 bytes, 2.17%)</title>
            <rect x="96.8924%" y="430" width="2.1721%" height="21" fill="rgb(255,227,227)" fg:x="3134652" fg:w="70272"/>
            <text x="97.1424%" y="443.50"></text>
        </g>
        <g>
            <title>    return os.path.realpath(filepath) (70,272 bytes, 2.17%)</title>
            <rect x="96.8924%" y="452" width="2.1721%" height="21" fill="rgb(255,227,227)" fg:x="3134652" fg:w="70272"/>
            <text x="97.1424%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1040 (_find_libraries_with_dyld) (119,894 bytes, 3.71%)</title>
            <rect x="95.4662%" y="342" width="3.7059%" height="21" fill="rgb(255,221,221)" fg:x="3088514" fg:w="119894"/>
            <text x="95.7162%" y="355.50">/U..</text>
        </g>
        <g>
            <title>            self._make_controller_from_path(filepath) (119,894 bytes, 3.71%)</title>
            <rect x="95.4662%" y="364" width="3.7059%" height="21" fill="rgb(255,221,221)" fg:x="3088514" fg:w="119894"/>
            <text x="95.7162%" y="377.50"> ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:818 (__init__) (197,956 bytes, 6.12%)</title>
            <rect x="93.0891%" y="254" width="6.1188%" height="21" fill="rgb(255,212,212)" fg:x="3011608" fg:w="197956"/>
            <text x="93.3391%" y="267.50">/User..</text>
        </g>
        <g>
            <title>        self._load_libraries() (197,956 bytes, 6.12%)</title>
            <rect x="93.0891%" y="276" width="6.1188%" height="21" fill="rgb(255,212,212)" fg:x="3011608" fg:w="197956"/>
            <text x="93.3391%" y="289.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:970 (_load_libraries) (197,486 bytes, 6.10%)</title>
            <rect x="93.1036%" y="298" width="6.1043%" height="21" fill="rgb(255,212,212)" fg:x="3012078" fg:w="197486"/>
            <text x="93.3536%" y="311.50">/User..</text>
        </g>
        <g>
            <title>            self._find_libraries_with_dyld() (197,486 bytes, 6.10%)</title>
            <rect x="93.1036%" y="320" width="6.1043%" height="21" fill="rgb(255,212,212)" fg:x="3012078" fg:w="197486"/>
            <text x="93.3536%" y="333.50">    ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_compiler.py:745 (compile) (10,118 bytes, 0.31%)</title>
            <rect x="99.2671%" y="474" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="3211480" fg:w="10118"/>
            <text x="99.5171%" y="487.50"></text>
        </g>
        <g>
            <title>        p = _parser.parse(p, flags) (10,118 bytes, 0.31%)</title>
            <rect x="99.2671%" y="496" width="0.3127%" height="21" fill="rgb(255,241,241)" fg:x="3211480" fg:w="10118"/>
            <text x="99.5171%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_parser.py:979 (parse) (8,292 bytes, 0.26%)</title>
            <rect x="99.3236%" y="518" width="0.2563%" height="21" fill="rgb(255,242,242)" fg:x="3213306" fg:w="8292"/>
            <text x="99.5736%" y="531.50"></text>
        </g>
        <g>
            <title>    p = _parse_sub(source, state, flags &amp; SRE_FLAG_VERBOSE, 0) (8,292 bytes, 0.26%)</title>
            <rect x="99.3236%" y="540" width="0.2563%" height="21" fill="rgb(255,242,242)" fg:x="3213306" fg:w="8292"/>
            <text x="99.5736%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_parser.py:512 (_parse_sub) (6,870 bytes, 0.21%)</title>
            <rect x="99.3675%" y="562" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="3214728" fg:w="6870"/>
            <text x="99.6175%" y="575.50"></text>
        </g>
        <g>
            <title>def _parse(source, state, verbose, nested, first=False): (6,870 bytes, 0.21%)</title>
            <rect x="99.3675%" y="584" width="0.2124%" height="21" fill="rgb(255,243,243)" fg:x="3214728" fg:w="6870"/>
            <text x="99.6175%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/_compiler.py:749 (compile) (6,820 bytes, 0.21%)</title>
            <rect x="99.5799%" y="474" width="0.2108%" height="21" fill="rgb(255,243,243)" fg:x="3221598" fg:w="6820"/>
            <text x="99.8299%" y="487.50"></text>
        </g>
        <g>
            <title>    code = _code(p, flags) (6,820 bytes, 0.21%)</title>
            <rect x="99.5799%" y="496" width="0.2108%" height="21" fill="rgb(255,243,243)" fg:x="3221598" fg:w="6820"/>
            <text x="99.8299%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/__init__.py:307 (_compile) (18,072 bytes, 0.56%)</title>
            <rect x="99.2590%" y="430" width="0.5586%" height="21" fill="rgb(255,238,238)" fg:x="3211218" fg:w="18072"/>
            <text x="99.5090%" y="443.50"></text>
        </g>
        <g>
            <title>        p = _compiler.compile(pattern, flags) (18,072 bytes, 0.56%)</title>
            <rect x="99.2590%" y="452" width="0.5586%" height="21" fill="rgb(255,238,238)" fg:x="3211218" fg:w="18072"/>
            <text x="99.5090%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/re/__init__.py:186 (sub) (20,292 bytes, 0.63%)</title>
            <rect x="99.2079%" y="386" width="0.6272%" height="21" fill="rgb(255,238,238)" fg:x="3209564" fg:w="20292"/>
            <text x="99.4579%" y="399.50"></text>
        </g>
        <g>
            <title>    return _compile(pattern, flags).sub(repl, string, count) (20,292 bytes, 0.63%)</title>
            <rect x="99.2079%" y="408" width="0.6272%" height="21" fill="rgb(255,238,238)" fg:x="3209564" fg:w="20292"/>
            <text x="99.4579%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:1202 (_warn_if_incompatible_openmp) (21,206 bytes, 0.66%)</title>
            <rect x="99.2079%" y="298" width="0.6555%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21206"/>
            <text x="99.4579%" y="311.50"></text>
        </g>
        <g>
            <title>        msg = textwrap.dedent( (21,206 bytes, 0.66%)</title>
            <rect x="99.2079%" y="320" width="0.6555%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21206"/>
            <text x="99.4579%" y="333.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/textwrap.py:466 (dedent) (21,206 bytes, 0.66%)</title>
            <rect x="99.2079%" y="342" width="0.6555%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21206"/>
            <text x="99.4579%" y="355.50"></text>
        </g>
        <g>
            <title>        text = re.sub(r&apos;(?m)^&apos; + margin, &apos;&apos;, text) (21,206 bytes, 0.66%)</title>
            <rect x="99.2079%" y="364" width="0.6555%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21206"/>
            <text x="99.4579%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:819 (__init__) (21,636 bytes, 0.67%)</title>
            <rect x="99.2079%" y="254" width="0.6688%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21636"/>
            <text x="99.4579%" y="267.50"></text>
        </g>
        <g>
            <title>        self._warn_if_incompatible_openmp() (21,636 bytes, 0.67%)</title>
            <rect x="99.2079%" y="276" width="0.6688%" height="21" fill="rgb(255,237,237)" fg:x="3209564" fg:w="21636"/>
            <text x="99.4579%" y="289.50"></text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/contextlib.py:137 (__enter__) (270,715 bytes, 8.37%)</title>
            <rect x="91.5193%" y="122" width="8.3678%" height="21" fill="rgb(255,206,206)" fg:x="2960823" fg:w="270715"/>
            <text x="91.7693%" y="135.50">/Users/h..</text>
        </g>
        <g>
            <title>            return next(self.gen) (270,715 bytes, 8.37%)</title>
            <rect x="91.5193%" y="144" width="8.3678%" height="21" fill="rgb(255,206,206)" fg:x="2960823" fg:w="270715"/>
            <text x="91.7693%" y="157.50">       ..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/filprofiler/_tracer.py:179 (disable_thread_pools) (262,179 bytes, 8.10%)</title>
            <rect x="91.7831%" y="166" width="8.1040%" height="21" fill="rgb(255,207,207)" fg:x="2969359" fg:w="262179"/>
            <text x="92.0331%" y="179.50">/Users/h..</text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (262,179 bytes, 8.10%)</title>
            <rect x="91.7831%" y="188" width="8.1040%" height="21" fill="rgb(255,207,207)" fg:x="2969359" fg:w="262179"/>
            <text x="92.0331%" y="201.50">    wit..</text>
        </g>
        <g>
            <title>/Users/hal/miniforge3/lib/python3.12/site-packages/threadpoolctl.py:794 (__init__) (261,529 bytes, 8.08%)</title>
            <rect x="91.8032%" y="210" width="8.0839%" height="21" fill="rgb(255,207,207)" fg:x="2970009" fg:w="261529"/>
            <text x="92.0532%" y="223.50">/Users/h..</text>
        </g>
        <g>
            <title>        super().__init__(ThreadpoolController(), limits=limits, user_api=user_api) (261,529 bytes, 8.08%)</title>
            <rect x="91.8032%" y="232" width="8.0839%" height="21" fill="rgb(255,207,207)" fg:x="2970009" fg:w="261529"/>
            <text x="92.0532%" y="245.50">       ..</text>
        </g>
        <g>
            <title>all (3,235,190 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="3235190"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>